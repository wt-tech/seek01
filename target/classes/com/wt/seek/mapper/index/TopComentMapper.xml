<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace指向mapper接口 -->
<mapper namespace="com.wt.seek.dao.index.ITopComentMapper">

	<resultMap type="com.wt.seek.entity.TopComent" id="topcoment">
		<id column="id" property="id" />
		<result column="seekId" property="seekId" />
		<result column="content" property="content" />
		<result column="coment_time" property="comentTime" />

		<association javaType="com.wt.seek.entity.Customer"
			property="customer">
			<result property="nickname" column="nickname" />
		</association>

		<association javaType="com.wt.seek.entity.Seek"
			property="seek">
			<result property="title" column="title" />
		</association>
		
		<collection property="coment" ofType="Coment" column="id">
			<id column="coment_id" property="id"/>
			<result column="reply_content" property="content"/>
			
			<association javaType="com.wt.seek.entity.Customer" property="customer">
				<id property="id" column="customer2_id"/>
				<result property="replyname" column="replyname" />
				<result property="nickname" column="nickname" />
			</association>
		</collection>
		
	</resultMap>

	<resultMap type="com.wt.seek.entity.TopComents" id="TopComents">
		<id column="id" property="id" />
		<result column="seekId" property="seekId" />
		<result column="top_content" property="content" />

		<association javaType="com.wt.seek.entity.Customer"
			property="customer">
			<id property="id" column="top_customer_id"/>
			<result property="nickname" column="top_nickname" />
		</association>
		
		<collection  property="talks" ofType="com.wt.seek.entity.Talks" autoMapping="true">
			<id property="replyId" column="replyId"/>
			<result property="replyContent" column="replyContent"/>
			<result property="replyTime" column="replyTime"/>
			<result property="replyCustomerName" column="replyCustomerName"/>
			<result property="comentCustomerName" column="comentCustomerName"/>
		</collection>
		
	</resultMap>



	<select id="listTopComent" resultMap="TopComents">
		SELECT
			seek.id AS seekId,
			top.content AS top_content,
			top.id AS id,
			top_customer.id AS top_customer_id,
			top_customer.nickname AS top_nickname,
			
			replyId,
			replyContent,
			replyTime,
			replyCustomerName,
			comentCustomerName
		FROM
			seek
			LEFT JOIN ( SELECT * FROM top_coment WHERE seek_id = #{id} ORDER BY top_coment.coment_time DESC LIMIT ${(currentPageNo-1)*pageSize},${pageSize} ) AS top ON seek.id = top.seek_id
			LEFT JOIN customer top_customer ON top.customer_id = top_customer.id
			LEFT JOIN (
				SELECT
					talk.*,
					replyCustomer.nickname AS replyCustomerName,
					comentCustomer.nickname AS comentCustomerName 
					FROM
						(
						SELECT
					reply.id AS replyId,
					reply.customer_id AS replyCustomerId,
					reply.content AS replyContent,
					reply.coment_time AS replyTime,
					reply.top_coment_id,
					coment.customer_id AS comentCustomerId 
				FROM
					coment AS reply
					INNER JOIN coment ON reply.coment_id = coment.id UNION ALL
				SELECT 
					coment.id AS replyId,
					coment.customer_id AS replyCustomerId,
					coment.content AS replyContent,
					coment.coment_time AS replyTime,
					coment.top_coment_id,
					NULL AS comentCustomerId 
				FROM
					coment
					WHERE coment.coment_id is null
				) talk
				LEFT JOIN customer AS replyCustomer ON talk.replyCustomerId = replyCustomer.id
				LEFT JOIN customer AS comentCustomer ON talk.comentCustomerId = comentCustomer.id 
			) temp ON top.id = temp.top_coment_id 
		WHERE
		top.seek_id = #{id}
		order by replyTime ASC;
	</select>

	<select id="listTopComentByCustomerId" resultMap="topcoment">
		SELECT * FROM (
		SELECT seek.id AS seekId,coment1.content AS content , coment2.content title ,coment1.id
		AS id,coment1.coment_time FROM coment coment1
		INNER JOIN coment coment2 ON coment1.coment_id = coment2.id
		INNER JOIN seek ON coment1.seek_id = seek.id WHERE
		coment1.customer_id=#{customerId}
		UNION ALL
		SELECT seek.id AS seekId,coment.content,top_coment.content AS title ,coment.id AS
		id,coment.coment_time FROM coment INNER JOIN top_coment ON
		top_coment_id =
		top_coment.id 
		INNER JOIN seek ON
		top_coment.seek_id =
		seek.id WHERE coment.coment_id IS NULL AND coment.customer_id=#{customerId}
		UNION ALL
		SELECT seek.id AS seekId,content,title ,top_coment.id AS id,top_coment.coment_time FROM
		top_coment LEFT JOIN seek ON seek_id = seek.id WHERE
		top_coment.customer_id=#{customerId}
		)LIST ORDER BY coment_time DESC
		LIMIT
		${(currentPageNo-1)*pageSize},${pageSize}
	</select>

	<insert id="saveTopComent" parameterType="TopComent">
		insert into top_coment
		(customer_id,seek_id,content,coment_time)
		values(#{customer.id},#{seek.id},#{content},NOW());
	</insert>

	<select id="countTopComent" resultType="Integer">
		SELECT COUNT(*) FROM
		top_coment WHERE seek_id=#{id};
	</select>

	<select id="countTopComentByCustomerId" resultType="Integer">
		SELECT
		COUNT(*) FROM (
		SELECT coment1.content AS content , coment2.content title ,coment1.id
		AS id,coment1.coment_time FROM coment coment1
		INNER JOIN coment coment2 ON coment1.coment_id = coment2.id WHERE
		coment1.customer_id=#{customerId}
		UNION ALL
		SELECT coment.content,top_coment.content AS title ,coment.id AS
		id,coment.coment_time FROM coment INNER JOIN top_coment ON
		top_coment_id =
		top_coment.id WHERE coment.coment_id IS NULL AND coment.customer_id=#{customerId}
		UNION ALL
		SELECT content,title ,top_coment.id AS id,top_coment.coment_time FROM
		top_coment LEFT JOIN seek ON seek_id = seek.id WHERE
		top_coment.customer_id=#{customerId}
		)LIST
	</select>
	
	<select id="listComentByCustomerId" resultMap="topcoment">
		SELECT
			* 
			FROM
				(
			SELECT
				top_coment.id,
				top_coment.content,
				top_coment.coment_time,
				IFNULL( coment_customer.nickname, coment_customer.realname ) AS nickname 
			FROM
				customer
				INNER JOIN seek ON customer.id = seek.customer_id
				INNER JOIN top_coment ON seek.id = top_coment.seek_id
				LEFT JOIN customer AS coment_customer ON top_coment.customer_id = coment_customer.id 
			WHERE
				customer.id = #{customerId}
				
				AND coment_customer.id != #{customerId}
			UNION ALL
			SELECT
				coment.id,
				coment.content,
				coment.coment_time,
				IFNULL( customer.nickname, customer.realname ) AS nickname 
			FROM
				(
				SELECT
					* 
				FROM
					(-- coment 评论 top_coment
					SELECT
						coment.id AS coment_id,
						customer.id AS customer_id 
					FROM
						customer
						INNER JOIN top_coment ON customer.id = top_coment.customer_id
						INNER JOIN coment ON top_coment.id = coment.top_coment_id UNION ALL-- comment 评论 seek
					SELECT
						coment.id AS coment_id,
						customer.id AS customer_id 
					FROM
						customer
						INNER JOIN seek ON customer.id = seek.customer_id
						INNER JOIN coment ON seek.id = coment.seek_id UNION ALL-- 子comment 评论 父comment
					SELECT
						sub_comment.id AS coment_id,
						customer.id AS customer_id 
					FROM
						customer
						INNER JOIN coment ON customer.id = coment.customer_id
						INNER JOIN coment AS sub_comment ON coment.id = sub_comment.coment_id 
					) temp 
				WHERE
					customer_id = #{customerId}
					
				GROUP BY
					coment_id 
				) temp_coment
				LEFT JOIN coment ON temp_coment.coment_id = coment.id
				LEFT JOIN customer ON coment.customer_id = customer.id 
			WHERE
				customer.id != #{customerId}
				
				) comments 
		ORDER BY
		comments.coment_time DESC 
		LIMIT ${(currentPageNo - 1) * pageSize},${pageSize};
	</select>
	<!-- <select id="listComentByCustomerId" resultMap="topcoment">
		SELECT * FROM (
		SELECT coment2.content AS content , coment1.content title ,coment1.id
		AS id,nickname,coment2.coment_time FROM coment coment1
		INNER JOIN coment coment2 ON coment1.coment_id = coment2.id 
		INNER JOIN customer ON coment2.customer_id =customer.id WHERE
		coment1.customer_id=#{customerId}
		UNION ALL
		SELECT coment.content,top_coment.content AS title ,coment.id AS
		id,nickname,coment.coment_time FROM coment 
		INNER JOIN top_coment ON
		top_coment_id =top_coment.id 
		INNER JOIN customer ON
		coment.customer_id =customer.id 
		WHERE coment.coment_id IS NULL AND top_coment.customer_id=#{customerId}
		UNION ALL
		SELECT content,title ,top_coment.id AS id,nickname,top_coment.coment_time FROM
		top_coment LEFT JOIN seek ON seek_id = seek.id 
		LEFT JOIN customer ON
		top_coment.customer_id =customer.id 
		WHERE
		seek.customer_id=#{customerId}
		UNION ALL
		SELECT content,title ,coment.id AS id,nickname,coment.coment_time FROM
		coment LEFT JOIN seek ON seek_id = seek.id 
		LEFT JOIN customer ON
		coment.customer_id =customer.id 
		WHERE
		seek.customer_id=#{customerId}
		)LIST ORDER BY coment_time DESC
		LIMIT
		${(currentPageNo-1)*pageSize},${pageSize}
	</select> -->
	
	<select id="countComentByCustomerId" resultType="Integer">
		SELECT
		COUNT(*) FROM (
		SELECT coment2.content AS content , coment1.content title ,coment1.id
		AS id,nickname,coment2.coment_time FROM coment coment1
		INNER JOIN coment coment2 ON coment1.coment_id = coment2.id 
		INNER JOIN customer ON coment2.customer_id =customer.id WHERE
		coment1.customer_id=#{customerId}
		UNION ALL
		SELECT coment.content,top_coment.content AS title ,coment.id AS
		id,nickname,coment.coment_time FROM coment 
		INNER JOIN top_coment ON
		top_coment_id =top_coment.id 
		INNER JOIN customer ON
		coment.customer_id =customer.id 
		WHERE coment.coment_id IS NULL AND top_coment.customer_id=#{customerId}
		UNION ALL
		SELECT content,title ,top_coment.id AS id,nickname,top_coment.coment_time FROM
		top_coment LEFT JOIN seek ON seek_id = seek.id 
		LEFT JOIN customer ON
		top_coment.customer_id =customer.id 
		WHERE
		seek.customer_id=#{customerId}
		UNION ALL
		SELECT content,title ,coment.id AS id,nickname,coment.coment_time FROM
		coment LEFT JOIN seek ON seek_id = seek.id 
		LEFT JOIN customer ON
		coment.customer_id =customer.id 
		WHERE
		seek.customer_id=#{customerId}
		)LIST
	</select>
</mapper>